name: Deploy

on:
  push:
    branches: [ "main" ]

jobs:
  scan:
    name: SonarCloud Scan
    runs-on: ubuntu-latest
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Download libpens
        env:
          PEN_FILE_SERVER: ${{secrets.PEN_FILE_SERVER}}
        run: .github/bin/ftp_tool.sh -d
      - name: Install sonar-scanner and build-wrapper
        uses: SonarSource/sonarcloud-github-c-cpp@v1
      - name: Run build-wrapper
        run: |
          mkdir build
          cmake -S . -B build -DPEN_LIBRARY_PATH=${GITHUB_WORKSPACE}/libpen -DCMAKE_BUILD_TYPE=Release
          build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} cmake --build build/ --config Release
      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }} # Put the name of your token here
        run: |
          sonar-scanner --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}"
  linux:
    runs-on: ubuntu-latest
    needs: [scan]
    steps:
      - uses: actions/checkout@v3

      - name: Download libpens
        env:
          PEN_FILE_SERVER: ${{secrets.PEN_FILE_SERVER}}
        run: .github/bin/ftp_tool.sh -d

      - name: Build
        run: .github/bin/build.sh

      - name: Pack
        run: .github/bin/pack.sh

      - name: Deploy
        env:
          UPLOAD_SECRET: ${{secrets.UPLOAD_SECRET}}
          PEN_FILE_SERVER: ${{secrets.PEN_FILE_SERVER}}
        run: .github/bin/ftp_tool.sh -u

  macos:
    runs-on: macos-latest
    needs: [scan]
    steps:
      - uses: actions/checkout@v3

      - name: Download libpens
        env:
          PEN_FILE_SERVER: ${{secrets.PEN_FILE_SERVER}}
        run: .github/bin/ftp_tool.sh -d

      - name: Build
        run: .github/bin/build.sh

      - name: Pack
        run: .github/bin/pack.sh

      - name: Deploy
        env:
          UPLOAD_SECRET: ${{secrets.UPLOAD_SECRET}}
          PEN_FILE_SERVER: ${{secrets.PEN_FILE_SERVER}}
        run: .github/bin/ftp_tool.sh -u

  windows:
    runs-on: windows-latest
    needs: [scan]
    steps:
      - uses: actions/checkout@v3

      - name: Prepare
        env:
          PEN_FILE_SERVER: ${{secrets.PEN_FILE_SERVER}}
        run: |
          .github/bin/ftp_tool.sh -d
          .github/bin/ftp_tool.sh -g
        shell: bash

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.1.3

      - name: Configure
        run: .github/bin/build.sh
        shell: bash

      - name: Build
        run: msbuild ./build/ALL_BUILD.vcxproj /property:Configuration=Release

      - name: Install
        run: msbuild ./build/INSTALL.vcxproj /Property:Configuration=Release

      - name: Pack
        run: .github/bin/pack.sh
        shell: bash

      - name: Deploy
        env:
          UPLOAD_SECRET: ${{secrets.UPLOAD_SECRET}}
          PEN_FILE_SERVER: ${{secrets.PEN_FILE_SERVER}}
        run: .github/bin/ftp_tool.sh -u
        shell: bash
